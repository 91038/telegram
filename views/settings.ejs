<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">SMS API 설정</h5>
            </div>
            <div class="card-body">
                <form id="smsSettingsForm">
                    <div class="mb-3">
                        <label for="smsApiKey" class="form-label">API 키</label>
                        <input type="text" class="form-control" id="smsApiKey" value="<%- smsSettings.apiKey %>" required>
                    </div>
                    <div class="mb-3">
                        <label for="smsApiSecret" class="form-label">API 시크릿</label>
                        <input type="password" class="form-control" id="smsApiSecret" value="<%- smsSettings.apiSecret %>" required>
                    </div>
                    <div class="mb-3">
                        <label for="smsSenderId" class="form-label">발신번호 ID</label>
                        <input type="text" class="form-control" id="smsSenderId" value="<%- smsSettings.senderId %>" required>
                    </div>
                    <button type="submit" class="btn btn-primary">저장</button>
                </form>
            </div>
        </div>
    </div>
    
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">다중 메시지 설정</h5>
            </div>
            <div class="card-body">
                <form id="multiMessageForm">
                    <p class="text-muted">하나의 전화번호로 최대 3개의 메시지를 순차적으로 발송할 수 있습니다.</p>
                    
                    <div class="form-check form-switch mb-3">
                        <input class="form-check-input" type="checkbox" id="useMultiMessage" <%- settings.useMultiMessage ? 'checked' : '' %>>
                        <label class="form-check-label" for="useMultiMessage">다중 메시지 사용</label>
                    </div>
                    
                    <div class="mb-3">
                        <label for="messageDelay" class="form-label">메시지 간 지연 시간 (초)</label>
                        <input type="number" class="form-control" id="messageDelay" value="<%- settings.messageDelay || 10 %>" min="5" max="60">
                        <div class="form-text">최소 5초, 최대 60초</div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">기본 메시지 템플릿</label>
                        <select class="form-select" id="messageTemplate1">
                            <% Object.keys(templates).forEach(key => { %>
                                <option value="<%- key %>" <% if (key === settings.messageTemplate1) { %>selected<% } %>>
                                    <%- key %>
                                </option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">두 번째 메시지 템플릿</label>
                        <select class="form-select" id="messageTemplate2">
                            <option value="">사용 안함</option>
                            <% Object.keys(templates).forEach(key => { %>
                                <option value="<%- key %>" <% if (key === settings.messageTemplate2) { %>selected<% } %>>
                                    <%- key %>
                                </option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label">세 번째 메시지 템플릿</label>
                        <select class="form-select" id="messageTemplate3">
                            <option value="">사용 안함</option>
                            <% Object.keys(templates).forEach(key => { %>
                                <option value="<%- key %>" <% if (key === settings.messageTemplate3) { %>selected<% } %>>
                                    <%- key %>
                                </option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">저장</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">모니터링할 채팅방 관리</h5>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addChatModal">
                    채팅방 추가
                </button>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>이름</th>
                                <th>유형</th>
                                <th>추가 일시</th>
                                <th>관리</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (chats && chats.length > 0) { %>
                                <% chats.forEach(chat => { %>
                                    <tr>
                                        <td><%- chat.id %></td>
                                        <td><%- chat.name || '이름 없음' %></td>
                                        <td><%- chat.type || '알 수 없음' %></td>
                                        <td><%- chat.addedAt %></td>
                                        <td>
                                            <button class="btn btn-sm btn-danger remove-chat" data-id="<%- chat.id %>">
                                                제거
                                            </button>
                                        </td>
                                    </tr>
                                <% }) %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="text-center">모니터링 중인 채팅방이 없습니다.</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 채팅방 추가 모달 -->
<div class="modal fade" id="addChatModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">채팅방 추가</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addChatForm">
                    <div class="mb-3">
                        <label for="chatIdentifier" class="form-label">채팅방 식별자</label>
                        <input type="text" class="form-control" id="chatIdentifier" required
                               placeholder="사용자명, 그룹명 또는 채팅방 ID">
                        <div class="form-text">
                            텔레그램 사용자명(@으로 시작), 그룹명 또는 채팅방 ID를 입력하세요.
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                <button type="button" class="btn btn-primary" id="addChatButton">추가</button>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="card-title mb-0">시스템 설정</h5>
    </div>
    <div class="card-body">
        <form id="settingsForm">
            <h6 class="mb-3">텔레그램 API 설정</h6>
            <div class="mb-3">
                <label for="telegramApiId" class="form-label">API ID</label>
                <input type="text" class="form-control" id="telegramApiId" value="<%= telegramApiId %>" readonly>
            </div>
            <div class="mb-3">
                <label for="telegramApiHash" class="form-label">API Hash</label>
                <input type="text" class="form-control" id="telegramApiHash" value="<%= telegramApiHash %>" readonly>
            </div>

            <h6 class="mb-3 mt-4">SMS API 설정</h6>
            <div class="mb-3">
                <label for="smsApiKey" class="form-label">API Key</label>
                <input type="text" class="form-control" id="smsApiKey" value="<%= smsApiKey %>" readonly>
            </div>
            <div class="mb-3">
                <label for="smsSenderId" class="form-label">발신자 ID</label>
                <input type="text" class="form-control" id="smsSenderId" value="<%= smsSenderId %>" readonly>
            </div>
            <div class="mb-3">
                <label for="smsApiUrl" class="form-label">API URL</label>
                <input type="text" class="form-control" id="smsApiUrl" value="<%= smsApiUrl %>" readonly>
            </div>

            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i>
                설정을 변경하려면 .env 파일을 직접 수정하고 서버를 재시작해야 합니다.
            </div>
        </form>
    </div>
</div>

<script>
    // SMS 설정 저장
    document.getElementById('smsSettingsForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const data = {
            apiKey: document.getElementById('smsApiKey').value,
            apiSecret: document.getElementById('smsApiSecret').value,
            senderId: document.getElementById('smsSenderId').value
        };
        
        axios.post('/api/settings/sms', data)
            .then(function(response) {
                alert('SMS 설정이 저장되었습니다.');
            })
            .catch(function(error) {
                alert('SMS 설정 저장 실패: ' + (error.response?.data?.message || error.message));
            });
    });
    
    // 다중 메시지 설정 저장
    document.getElementById('multiMessageForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const data = {
            useMultiMessage: document.getElementById('useMultiMessage').checked,
            messageDelay: parseInt(document.getElementById('messageDelay').value),
            messageTemplate1: document.getElementById('messageTemplate1').value,
            messageTemplate2: document.getElementById('messageTemplate2').value,
            messageTemplate3: document.getElementById('messageTemplate3').value
        };
        
        axios.post('/api/settings/multi-message', data)
            .then(function(response) {
                alert('다중 메시지 설정이 저장되었습니다.');
            })
            .catch(function(error) {
                alert('다중 메시지 설정 저장 실패: ' + (error.response?.data?.message || error.message));
            });
    });
    
    // 채팅방 추가
    document.getElementById('addChatButton').addEventListener('click', function() {
        const identifier = document.getElementById('chatIdentifier').value.trim();
        
        if (!identifier) {
            alert('채팅방 식별자를 입력해주세요.');
            return;
        }
        
        axios.post('/api/chats', {
            identifier: identifier
        })
        .then(function(response) {
            alert('채팅방이 추가되었습니다.');
            location.reload();
        })
        .catch(function(error) {
            alert('채팅방 추가 실패: ' + (error.response?.data?.message || error.message));
        });
    });
    
    // 채팅방 제거
    document.querySelectorAll('.remove-chat').forEach(button => {
        button.addEventListener('click', function() {
            const chatId = this.getAttribute('data-id');
            
            if (confirm('정말로 이 채팅방을 모니터링 목록에서 제거하시겠습니까?')) {
                axios.delete(`/api/chats/${chatId}`)
                .then(function(response) {
                    alert('채팅방이 제거되었습니다.');
                    location.reload();
                })
                .catch(function(error) {
                    alert('채팅방 제거 실패: ' + (error.response?.data?.message || error.message));
                });
            }
        });
    });
</script> 