<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">메시지 템플릿</h5>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTemplateModal">
            템플릿 추가
        </button>
    </div>
    <div class="card-body">
        <div class="alert alert-info">
            등록된 템플릿은 자동으로 사용할 수 있습니다. 텔레그램 메시지에서 전화번호가 감지되면 선택된 템플릿으로 SMS가 발송됩니다.
        </div>
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>템플릿 이름</th>
                        <th>내용</th>
                        <th>작업</th>
                    </tr>
                </thead>
                <tbody>
                    <% Object.entries(templates).forEach(([key, value]) => { %>
                        <tr>
                            <td><%= key %></td>
                            <td><%= value %></td>
                            <td>
                                <% if (key !== 'default') { %>
                                    <button class="btn btn-sm btn-danger delete-template" data-template="<%= key %>">
                                        삭제
                                    </button>
                                <% } else { %>
                                    <span class="badge bg-secondary">기본 템플릿</span>
                                <% } %>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- 템플릿 추가 모달 -->
<div class="modal fade" id="addTemplateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">템플릿 추가</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addTemplateForm">
                    <div class="mb-3">
                        <label for="templateName" class="form-label">템플릿 이름</label>
                        <input type="text" class="form-control" id="templateName" required>
                        <div class="form-text">영문, 숫자, 언더스코어(_)만 사용 가능합니다.</div>
                    </div>
                    <div class="mb-3">
                        <label for="templateContent" class="form-label">템플릿 내용</label>
                        <textarea class="form-control" id="templateContent" rows="5" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">취소</button>
                <button type="button" class="btn btn-primary" id="saveTemplateBtn">저장</button>
            </div>
        </div>
    </div>
</div>

<script>
// 템플릿 저장
document.getElementById('saveTemplateBtn').addEventListener('click', async function() {
    const name = document.getElementById('templateName').value.trim();
    const content = document.getElementById('templateContent').value.trim();
    
    if (!name || !content) {
        alert('템플릿 이름과 내용을 모두 입력해주세요.');
        return;
    }
    
    if (!/^[a-zA-Z0-9_]+$/.test(name)) {
        alert('템플릿 이름은 영문, 숫자, 언더스코어(_)만 사용할 수 있습니다.');
        return;
    }
    
    try {
        const response = await fetch('/api/templates', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, content })
        });
        
        const data = await response.json();
        if (data.success) {
            alert('템플릿이 추가되었습니다.');
            location.reload();
        } else {
            alert(data.message || '템플릿 추가에 실패했습니다.');
        }
    } catch (error) {
        alert('템플릿 추가 중 오류가 발생했습니다.');
    }
});

// 템플릿 삭제
document.querySelectorAll('.delete-template').forEach(button => {
    button.addEventListener('click', async function() {
        const template = this.getAttribute('data-template');
        
        if (confirm(`정말로 "${template}" 템플릿을 삭제하시겠습니까?`)) {
            try {
                const response = await fetch(`/api/templates/${template}`, {
                    method: 'DELETE'
                });
                
                const data = await response.json();
                if (data.success) {
                    alert('템플릿이 삭제되었습니다.');
                    location.reload();
                } else {
                    alert(data.message || '템플릿 삭제에 실패했습니다.');
                }
            } catch (error) {
                alert('템플릿 삭제 중 오류가 발생했습니다.');
            }
        }
    });
});
</script> 